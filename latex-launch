#!/bin/bash

set -euo

function cleanup() {
    if [ "$WATCH" != "no" ]; then
        killall inotifywait
    fi
    exit
}

trap cleanup SIGINT SIGTERM EXIT

FILE_NAME=unset
OUT_DIR=unset
ENGINE="pdflatex"
USE_BIBER="no"
WATCH="no"

SHORT=n:,o:,b::,e:,w:
LONG=file-name:,out-dir:,use-biber::,engine:,watch:
OPTS=$(getopt -a -n latex-launch --options $SHORT --longoptions $LONG -- "$@")

if [ "$#" -eq 0 ]; then
    echo "Usage: latex-launch
                [ -n | --file-name ]
                [ -o | --out-dir   ]
                [ -b | --use-biber ]
                [ -e | --engine    ]
                [ -w | --watch     ]"
    exit 2
fi

eval set -- "$OPTS"
while :
do
  case "$1" in
    -n | --file-name)
        FILE_NAME="$2"
        shift 2
        ;;
    -o | --out-dir)
        OUT_DIR="$2"
        shift 2
        ;;
    -b | --use-biber)
        USE_BIBER="$2"
        shift 2
        ;;
    -e | --engine)
        ENGINE="$2"
        shift 2
        ;;
    -w | --watch)
        WATCH="$2"
        shift 2
        ;;
    --)
      shift;
      break
      ;;
    *)
      echo "Unexpected option: $1"
      ;;
  esac
done

echo "[INFO] RUNNING WITH THIS PARAMETERS:
{
    file name:   $FILE_NAME,
    output_dir:  $OUT_DIR,
    using_biber: $USE_BIBER,
    engine:      $ENGINE,
    watch:       $WATCH
}"


function compile() {
    LATEX_ARG="-shell-escape -interaction=batchmode -output-directory=$OUT_DIR $FILE_NAME.tex"
    $ENGINE $LATEX_ARG

    if [ "$USE_BIBER" != "no" ]; then
        biber -output-directory=$OUT_DIR -input-directory=$OUT_DIR $FILE_NAME
        $ENGINE $LATEX_ARG
    fi
}

mkdir -p $OUT_DIR

if [ "$WATCH" == "no" ]; then
    compile
else
    inotifywait -m -r -e modify --format '%f' "." | while read  -r NEWFILE; do
        if [[ $NEWFILE == *.tex ]]; then
            compile
        fi
    done &

    wait $!
fi
